type Token @entity {
  id: ID!
  tokenID: BigInt!
  name: String!
  description: String!
  attributes: String!
  imageUri: String!
  totalAmount: BigInt!
  transactions: [TokenTransaction!]!
  balances: [TokenBalance!]!
  holders: [Membership!]!
}

type TokenTransaction @entity {
  id: ID!
  tokenID: BigInt!
  from: Bytes!
  to: Bytes!
  amount: BigInt!
  txHash: Bytes!
  type: TransactionType!
  timestamp: BigInt!
}

type TokenBalance @entity {
  id: ID!
  balance: BigInt!
}

type Badge @entity {
  id: ID!
  tokenID: BigInt!
  name: String!
  description: String!
  attributes: String!
  imageUri: String!
  holders: [Membership!]!
}

type Guild @entity {
  id: ID!
  tokenID: BigInt!
  name: String!
  description: String!
  imageUri: String!
  holders: [Membership!]!
}

type Membership @entity {
  id: ID!
  tokenID: BigInt!
  holder: Bytes!
  nickname: String!
  profileImageUri: String!
  joinedAt: BigInt!
  experiencePoints: Token!
  activityPoints: Token!
  attendedEvents: Token!
  isAdmin: Boolean
  guilds: [Guild!]! @derivedFrom(field: "holders")
  badges: [Badge!]! @derivedFrom(field: "holders")
  tokens: [Token!]! @derivedFrom(field: "holders")
}

enum TransactionType {
  NONE
  TOKEN_MINT
  TOKEN_BURN
  MEMBERSHIP_MINT
  MEMBERSHIP_EDIT
  MEMBERSHIP_BURN
  BADGE_ADD
  BADGE_MINT
  BADGE_EDIT
  BADGE_BURN
  GUILD_ADD
  GUILD_JOIN
  GUILD_LEAVE
  GUILD_EDIT
} 